parameters:
    # Set in \Ibexa\Bundle\HttpCache\DependencyInjection\Compiler\VarnishCachePass
    # equal to settings under fos_http_cache.proxy_client.varnish.http.servers|base_url
    ibexa.http_cache.varnish.http.servers: []
    ibexa.http_cache.varnish.http.base_url: ~
    # Optional settings to set a max length parameter (in bytes, eg 7900) and corresponding ttl (in seconds, eg 3600)
    # Set  ttl to a low number as removing tags involves risk of stale responses (as it won't be purged on the tags removed)
    # NOTE: System will log warning when this happens so you can fix the given response to avoid the issue.
    ibexa.http_cache.tags.header_max_length: null
    ibexa.http_cache.tags.header_reduced_ttl: null

services:
    Ibexa\HttpCache\ProxyClient\HttpDispatcherFactory:
        arguments:
            - '@ibexa.config.resolver'
            - '@Ibexa\Bundle\Core\DependencyInjection\Configuration\SiteAccessAware\DynamicSettingParser'
            - FOS\HttpCache\ProxyClient\HttpDispatcher

    ibexa.http_cache.proxy_client.varnish.http_dispatcher:
        class: FOS\HttpCache\ProxyClient\HttpDispatcher
        decorates: fos_http_cache.proxy_client.varnish.http_dispatcher
        lazy: true
        factory: ['@Ibexa\HttpCache\ProxyClient\HttpDispatcherFactory', 'buildHttpDispatcher']
        arguments:
            $servers: '%ibexa.http_cache.varnish.http.servers%'
            $baseUrl: '%ibexa.http_cache.varnish.http.base_url%'

    ibexa.http_cache.purge_client:
        alias: Ibexa\HttpCache\PurgeClient\RepositoryPrefixDecorator

    Ibexa\HttpCache\PurgeClient\RepositoryPrefixDecorator:
        class: Ibexa\HttpCache\PurgeClient\RepositoryPrefixDecorator
        arguments: ['@ibexa.http_cache.purge_client_internal', '@Ibexa\HttpCache\RepositoryTagPrefix']

    ibexa.http_cache.purge_client_internal:
        alias: Ibexa\HttpCache\PurgeClient\LocalPurgeClient

    Ibexa\HttpCache\PurgeClient\VarnishPurgeClient:
        class: Ibexa\HttpCache\PurgeClient\VarnishPurgeClient
        arguments:
            - '@fos_http_cache.cache_manager'
        tags:
            - {name: ibexa.cache.http.purge_client, purge_type: varnish}

    Ibexa\HttpCache\PurgeClient\LocalPurgeClient:
        class: Ibexa\HttpCache\PurgeClient\LocalPurgeClient
        arguments: ['@Toflar\Psr6HttpCacheStore\Psr6Store']
        tags:
            - {name: ibexa.cache.http.purge_client, purge_type: local}

    Toflar\Psr6HttpCacheStore\Psr6Store:
        class: Toflar\Psr6HttpCacheStore\Psr6Store
        arguments:
            - cache_directory: '%ibexa.http_cache.store.root%'

    Ibexa\HttpCache\Handler\TagHandler:
        class: Ibexa\HttpCache\Handler\TagHandler
        arguments:
         - '@Ibexa\HttpCache\RepositoryTagPrefix'
         - '@logger'
         - header_formatter: '@fos_http_cache.tag_handler.header_formatter'
           strict: '%fos_http_cache.tag_handler.strict%'
           # Custom Ibexa options (todo: Port to FOS)
           tag_max_length: '%ibexa.http_cache.tags.header_max_length%'
           tag_max_length_ttl: '%ibexa.http_cache.tags.header_reduced_ttl%'

    Ibexa\HttpCache\ContextProvider\RoleIdentify:
        class: Ibexa\HttpCache\ContextProvider\RoleIdentify
        arguments:
            - '@ibexa.api.repository'
            - '@Ibexa\Contracts\Core\Repository\PermissionResolver'
            - '@ibexa.api.service.user'
        tags:
            - { name: fos_http_cache.user_context_provider }

    Ibexa\Bundle\HttpCache\Controller\InvalidateTokenController:
        arguments:
         - '@ibexa.config.resolver'
         - '%ibexa.http_cache.invalidate_token.ttl%'
         - "@fos_http_cache.http.symfony_response_tagger"
        tags:
            - controller.service_arguments

    Ibexa\HttpCache\EventListener\ConditionallyRemoveVaryHeaderListener:
        arguments:
         - '%ibexa.http_cache.no_vary.routes%'
        tags:
            - { name: kernel.event_subscriber, priority: -100 }

    Ibexa\HttpCache\EventSubscriber\AddContentLanguageHeaderSubscriber:
        arguments:
            - '%ibexa.http_cache.translation_aware.enabled%'
        tags:
            - { name: kernel.event_subscriber }

    Ibexa\HttpCache\RepositoryTagPrefix:
        class: Ibexa\HttpCache\RepositoryTagPrefix
        # Use config resolver to be able to lazy load reading SA setting "repository" to avoid scope change issues
        arguments: ['@ibexa.config.resolver', '%ibexa.repositories%']

    fos_http_cache.proxy_client.varnish:
        class: Ibexa\HttpCache\ProxyClient\Varnish
        arguments:
            $configResolver: '@ibexa.config.resolver'
            $httpDispatcher: '@fos_http_cache.proxy_client.varnish.http_dispatcher'
            $options: '%fos_http_cache.proxy_client.varnish.options%'
